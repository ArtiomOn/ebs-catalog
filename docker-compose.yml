version: "3.9"

volumes:
  catalog_postgres:
    name: catalog_postgres
  catalog_rabbitmq:
    name: catalog_rabbitmq

services:
  postgres:
    container_name: catalog_postgres
    hostname: postgres.catalog.com
    image: postgres:latest
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - catalog_postgres:/var/lib/postgresql/data
    ports:
      - "5432:5432"
  rabbitmq:
    container_name: catalog_rabbitmq
    hostname: rabbitmq.catalog.com
    image: rabbitmq:latest
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_VHOST}
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - catalog_rabbitmq:/var/lib/rabbitmq

  django:
    container_name: catalog_django
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command:
      - bash
      - -c
      - |
        python manage.py migrate --no-input
        python manage.py collectstatic --no-input
        python manage.py createsuperuser --no-input
        python manage.py runserver 0.0.0.0:8000
    # gunicorn config.wsgi:application --bind 0.0.0.0:8000
    ports:
      - "8000:8000"
    depends_on:
      - postgres
      - rabbitmq

  catalog_celery_beat:
    container_name: catalog_celery_beat
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: celery -A config.celery:app beat -l INFO
    depends_on:
      - postgres
      - rabbitmq

  catalog_celery_worker:
    container_name: catalog_celery_worker
    build:
      context: .
      dockerfile: Dockerfile
    env_file:
      - .env
    command: celery -A config.celery:app worker --pool=eventlet --concurrency=10 -l INFO
    depends_on:
      - postgres
      - rabbitmq
